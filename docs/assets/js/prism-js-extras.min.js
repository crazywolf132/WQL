!(function(a) {
	a.languages.insertBefore('javascript', 'function-variable', {
		'method-variable': {
			pattern: RegExp(
				'(\\.\\s*)' + a.languages.javascript['function-variable'].pattern.source
			),
			lookbehind: !0,
			alias: ['function-variable', 'method', 'function', 'property-access']
		}
	}),
		a.languages.insertBefore('javascript', 'function', {
			method: {
				pattern: RegExp('(\\.\\s*)' + a.languages.javascript.function.source),
				lookbehind: !0,
				alias: ['function', 'property-access']
			}
		}),
		a.languages.insertBefore('javascript', 'constant', {
			'known-class-name': [
				{
					pattern: /\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\b/,
					alias: 'class-name'
				},
				{ pattern: /\b(?:[A-Z]\w*)Error\b/, alias: 'class-name' }
			]
		}),
		a.languages.javascript.keyword.unshift(
			{ pattern: /\b(?:as|default|export|from|import)\b/, alias: 'module' },
			{ pattern: /\bnull\b/, alias: ['null', 'nil'] },
			{ pattern: /\bundefined\b/, alias: 'nil' }
		),
		a.languages.insertBefore('javascript', 'operator', {
			spread: { pattern: /\.{3}/, alias: 'operator' },
			arrow: { pattern: /=>/, alias: 'operator' }
		}),
		a.languages.insertBefore('javascript', 'punctuation', {
			'property-access': {
				pattern: /(\.\s*)#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*/,
				lookbehind: !0
			},
			'maybe-class-name': {
				pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,
				lookbehind: !0
			},
			dom: {
				pattern: /\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\b/,
				alias: 'variable'
			},
			console: { pattern: /\bconsole(?=\s*\.)/, alias: 'class-name' }
		});
	for (
		var e = [
				'function',
				'function-variable',
				'method',
				'method-variable',
				'property-access'
			],
			t = 0;
		t < e.length;
		t++
	) {
		var n = e[t],
			r = a.languages.javascript[n];
		'RegExp' === a.util.type(r) &&
			(r = a.languages.javascript[n] = { pattern: r });
		var s = r.inside || {};
		(r.inside = s)['maybe-class-name'] = /^[A-Z][\s\S]*/;
	}
})(Prism);

(Prism.languages.javascript = Prism.languages.extend('clike', {
	'class-name': [
		Prism.languages.clike['class-name'],
		{
			pattern: /(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,
			lookbehind: !0
		}
	],
	keyword: [
		{ pattern: /((?:^|})\s*)(?:catch|finally)\b/, lookbehind: !0 },
		{
			pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
			lookbehind: !0
		}
	],
	number: /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,
	function: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
	operator: /--|\+\+|\*\*=?|=>|&&|\|\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?[.?]?|[~:]/
})),
	(Prism.languages.javascript[
		'class-name'
	][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/),
	Prism.languages.insertBefore('javascript', 'keyword', {
		regex: {
			pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*[\s\S]*?\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
			lookbehind: !0,
			greedy: !0
		},
		'function-variable': {
			pattern: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,
			alias: 'function'
		},
		parameter: [
			{
				pattern: /(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,
				lookbehind: !0,
				inside: Prism.languages.javascript
			},
			{
				pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,
				inside: Prism.languages.javascript
			},
			{
				pattern: /(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,
				lookbehind: !0,
				inside: Prism.languages.javascript
			},
			{
				pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,
				lookbehind: !0,
				inside: Prism.languages.javascript
			}
		],
		constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
	}),
	Prism.languages.insertBefore('javascript', 'string', {
		'template-string': {
			pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,
			greedy: !0,
			inside: {
				'template-punctuation': { pattern: /^`|`$/, alias: 'string' },
				interpolation: {
					pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,
					lookbehind: !0,
					inside: {
						'interpolation-punctuation': {
							pattern: /^\${|}$/,
							alias: 'punctuation'
						},
						rest: Prism.languages.javascript
					}
				},
				string: /[\s\S]+/
			}
		}
	}),
	Prism.languages.markup &&
		Prism.languages.markup.tag.addInlined('script', 'javascript'),
	(Prism.languages.js = Prism.languages.javascript);
